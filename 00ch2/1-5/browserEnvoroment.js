"use strict"


/*
имеется корневой объект window, который выступает в 2 ролях:

    Во-первых, это глобальный объект для
    JavaScript-кода, об этом более подробно
     говорится в главе Глобальный объект.

    Во-вторых, он также представляет собой окно браузера
    и располагает методами для управления им.


 */
//Например, здесь мы используем window как глобальный объект:
function sayHi() {
    console.table("Hello");
}
// глобальные функции доступны как методы глобального объекта:
window.sayHi();
console.log("window.innerHeight",window.innerHeight); // внутренняя высота окна браузера
//функцию нужно объявлять в глобальной области видимости, чтобы
//если объявить ее в локальной области то она будет не доступна


{
    //DOM (Document Object Model)

    /*
    Document Object Model, сокращённо DOM – объектная модель
     документа, которая представляет
    все содержимое страницы в виде объектов, которые можно менять.

Объект document – основная «входная точка».
С его помощью мы можем что-то создавать или менять на странице.
     */


// заменим цвет фона на красный,
    document.body.style.background = "red";

// а через секунду вернём как было
    setTimeout(() => document.body.style.background = "", 1000);

/*
Мы использовали в примере только document.body.style, но на самом деле
 возможности по управлению страницей намного шире. Различные свойства и
 методы описаны в спецификации:

    DOM Living Standard на https://dom.spec.whatwg.org

 */

    /*

CSSOM для стилей

Правила стилей CSS структурированы иначе чем HTML. Для них есть отдельная спецификация
 CSSOM, которая объясняет, как стили должны представляться в виде объектов, как
 их читать и писать.

CSSOM используется вместе с DOM при изменении стилей документа. В реальности CSSOM
требуется редко, обычно правила CSS статичны. Мы редко добавляем/удаляем стили
из JavaScript, но и это возможно.

     */

}
//BOM (Browser Object Model)
//бтв можно сделать неплохой пакет с хелперами (+ неб пет проект)
/*
Объектная модель браузера (Browser Object Model, BOM) – это дополнительные объекты,
предоставляемые браузером (окружением), чтобы работать со всем, кроме документа.
Например:

    Объект navigator даёт информацию о самом браузере и операционной системе.
    Среди множества его свойств самыми известными являются: navigator.userAgent –
    информация о текущем браузере, и navigator.platform – информация о платформе
    (может помочь в понимании того, в какой ОС открыт браузер – Windows/Linux/Mac и так далее).
    Объект location позволяет получить текущий URL и перенаправить браузер по новому адресу.

Вот как мы можем использовать объект location:
 */
{
    console.log(location.href); // показывает текущий URL
    if (confirm("Перейти на Wikipedia?")) {
        location.href = "https://wikipedia.org"; // перенаправляет браузер на другой URL
    }
}
/*
BOM является частью общей спецификации HTML.

Да, вы всё верно услышали. Спецификация HTML по адресу https://html.spec.whatwg.org не
только про «язык HTML» (теги, атрибуты), она также покрывает целое множество
 объектов, методов и специфичных для каждого браузера расширений DOM. Это
 всё «HTML в широком смысле». Для некоторых вещей есть отдельные спецификации,
 перечисленные на https://spec.whatwg.org.
 */

/*

полезные советы по гуглингу

Для поиска чего-либо обычно удобно использовать интернет-поиск со словами
 «WHATWG [термин]» или «MDN [термин]»,
например https://google.com?q=whatwg+localstorage, https://google.com?q=mdn+localstorage.
 */









